--Copyright (C) 2025  Starlight-CC
--Hyprkrnl
local _VG = _G
local keptAPIs = {assert = true, collectgarbage = true, gcinfo = true, getfenv = true, getmetatable = true, ipairs = true, load = true, loadstring = true, math = true, newproxy = true, next = true, pairs = true, pcall = true, rawequal = true, rawget = true, rawlen = true, rawset = true, select = true, setfenv = true, setmetatable = true, string = true, table = true, tonumber = true, tostring = true, type = true, unpack = true, xpcall = true, colors = true, colours = true, keys = true}
local t = {}
for k in pairs(_VG) do if not keptAPIs[k] then table.insert(t, k) end end
for _,k in ipairs(t) do _VG[k] = nil end
t = nil
local driverRuntimes = {}
local _VG.syscalls = {}
local function requireGlobal(_namespace)
    return _G[_namespace]
end
local function editENV(_namespace,_data)
    _VG[tostring(_namespace)]=_data
end
local function addSyscall(_namespace,_data)
    _VG.syscalls[tostring(_namespace)]=_data
end
local function addRunTask(_namespace,_function)
    driverRuntimes[tostring(_namespace)]=_function
end
local function PANIC(ERR,CustomPhrase)
    if CustomPhrase == nil then
        CustomPhrase = "Uh oh - Hyprkrnl"
    end
    local w,h = term.getSize()
    term.setBackgroundColor(colors.green)
    term.clear()
    term.setCursorPos(1,h-3)
    term.setBackgroundColor(colors.black)
    term.write(string.rep(" ",w))
    term.setCursorPos(5,5)
    term.setBackgroundColor(colors.green)
    term.setTextColor(colors.black)
    term.write("T_T") -- Hyprkrnl rn
    term.setCursorPos(5,7)
    term.write(tostring(CustomPhrase))
    term.setCursorPos(2,h-1)
    term.write("ERR: "..tostring(ERR))
    os.pullEvent()
    os.pullEvent()
    os.pullEvent()
    os.reboot()
end
-- Vurtual Driver ENV
local VDEnv = setmetatable({
    requireGlobal,
    editENV,
    addSyscall,
    addRunTask,
    PANIC
},{
    __index=function(tbl, key)
    local v = _VG[key]
    if v ~= nil and type(v)=="table" then
        return setmetatable({}, {__index=v})
    end
    return v
end
})
--Vurtual Program ENV
local VPEnv = setmetatable({},{
    __index=function(tbl, key)
    local v = _VG[key]
    if v ~= nil and type(v)=="table" then
        return setmetatable({}, {__index=v})
    end
    return v
end
})